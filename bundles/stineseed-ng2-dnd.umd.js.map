{"version":3,"file":"stineseed-ng2-dnd.umd.js.map","sources":["ng://@stineseed/ng2-dnd/src/dnd.utils.ts","ng://@stineseed/ng2-dnd/src/dnd.config.ts","ng://@stineseed/ng2-dnd/src/dnd.service.ts","node_modules/tslib/tslib.es6.js","ng://@stineseed/ng2-dnd/src/abstract.component.ts","ng://@stineseed/ng2-dnd/src/draggable.component.ts","ng://@stineseed/ng2-dnd/src/droppable.component.ts","ng://@stineseed/ng2-dnd/src/sortable.component.ts","ng://@stineseed/ng2-dnd/src/dnd.module.ts"],"sourcesContent":["// Copyright (C) 2016-2018 Sergey Akopkokhyants\r\n// This project is licensed under the terms of the MIT license.\r\n// https://github.com/akserg/ng2-dnd\r\n\r\n/**\r\n * Check and return true if an object is type of string\r\n */\r\nexport function isString(obj:any) {\r\n    return typeof obj === \"string\";\r\n}\r\n\r\n/**\r\n * Check and return true if an object not undefined or null\r\n */\r\nexport function isPresent(obj: any) {\r\n    return obj !== undefined && obj !== null;\r\n}\r\n\r\n/**\r\n * Check and return true if an object is type of Function\r\n */\r\nexport function isFunction(obj: any) {\r\n    return typeof obj === \"function\";\r\n}\r\n\r\n/**\r\n * Create Image element with specified url string\r\n */\r\nexport function createImage(src: string) {\r\n    let img:HTMLImageElement = new HTMLImageElement();\r\n    img.src = src;\r\n    return img;\r\n}\r\n\r\n/**\r\n * Call the function\r\n */\r\nexport function callFun(fun: Function) {\r\n    return fun();\r\n}","// Copyright (C) 2016-2018 Sergey Akopkokhyants\r\n// This project is licensed under the terms of the MIT license.\r\n// https://github.com/akserg/ng2-dnd\r\n\r\nimport {isString} from './dnd.utils';\r\n\r\nexport class DataTransferEffect {\r\n\r\n    static COPY = new DataTransferEffect('copy');\r\n    static LINK = new DataTransferEffect('link');\r\n    static MOVE = new DataTransferEffect('move');\r\n    static NONE = new DataTransferEffect('none');\r\n\r\n    constructor(public name: string) { }\r\n}\r\n\r\nexport class DragImage {\r\n    constructor(\r\n        public imageElement: any,\r\n        public x_offset: number = 0,\r\n        public y_offset: number = 0) {\r\n            if (isString(this.imageElement)) {\r\n                // Create real image from string source\r\n                let imgScr: string = <string>this.imageElement;\r\n                this.imageElement = new HTMLImageElement();\r\n                (<HTMLImageElement>this.imageElement).src = imgScr;\r\n            }\r\n        }\r\n}\r\n\r\nexport class DragDropConfig {\r\n    public onDragStartClass: string = \"dnd-drag-start\";\r\n    public onDragEnterClass: string = \"dnd-drag-enter\";\r\n    public onDragOverClass: string = \"dnd-drag-over\";\r\n    public onSortableDragClass: string = \"dnd-sortable-drag\";\r\n\r\n    public dragEffect: DataTransferEffect = DataTransferEffect.MOVE;\r\n    public dropEffect: DataTransferEffect = DataTransferEffect.MOVE;\r\n    public dragCursor: string = \"move\";\r\n    public dragImage: DragImage;\r\n    public defaultCursor: string = \"pointer\";\r\n}","// Copyright (C) 2016-2018 Sergey Akopkokhyants\r\n// This project is licensed under the terms of the MIT license.\r\n// https://github.com/akserg/ng2-dnd\r\n\r\nimport {Injectable, EventEmitter} from '@angular/core';\r\n\r\nimport {DragDropConfig} from './dnd.config';\r\nimport {isPresent} from './dnd.utils';\r\nimport {SortableContainer} from './sortable.component';\r\n\r\nexport class DragDropData {\r\n    dragData: any;\r\n    mouseEvent: MouseEvent;\r\n}\r\n\r\nexport function dragDropServiceFactory(): DragDropService  {\r\n    return new DragDropService();\r\n}\r\n\r\n@Injectable()\r\nexport class DragDropService {\r\n    allowedDropZones: Array<string> = [];\r\n    onDragSuccessCallback: EventEmitter<DragDropData>;\r\n    dragData: any;\r\n    isDragged: boolean;\r\n}\r\n\r\nexport function dragDropSortableServiceFactory(config: DragDropConfig): DragDropSortableService  {\r\n    return new DragDropSortableService(config);\r\n}\r\n\r\n@Injectable()\r\nexport class DragDropSortableService {\r\n    index: number;\r\n    sortableContainer: SortableContainer;\r\n    isDragged: boolean;\r\n\r\n    private _elem: HTMLElement;\r\n    public get elem(): HTMLElement {\r\n        return this._elem;\r\n    }\r\n\r\n    constructor(private _config:DragDropConfig) {}\r\n\r\n    markSortable(elem: HTMLElement) {\r\n        if (isPresent(this._elem)) {\r\n            this._elem.classList.remove(this._config.onSortableDragClass);\r\n        }\r\n        if (isPresent(elem)) {\r\n            this._elem = elem;\r\n            this._elem.classList.add(this._config.onSortableDragClass);\r\n        }\r\n    }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// Copyright (C) 2016-2018 Sergey Akopkokhyants\r\n// This project is licensed under the terms of the MIT license.\r\n// https://github.com/akserg/ng2-dnd\r\n\r\nimport {Injectable, ChangeDetectorRef, ViewRef} from '@angular/core';\r\nimport {ElementRef} from '@angular/core';\r\n\r\nimport { DragDropConfig, DragImage } from './dnd.config';\r\nimport { DragDropService } from './dnd.service';\r\nimport { isString, isFunction, isPresent, createImage, callFun } from './dnd.utils';\r\n\r\n@Injectable()\r\nexport abstract class AbstractComponent {\r\n    _elem: HTMLElement;\r\n    _dragHandle: HTMLElement;\r\n    _dragHelper: HTMLElement;\r\n    _defaultCursor: string;\r\n\r\n    /**\r\n     * Last element that was mousedown'ed\r\n     */\r\n    _target: EventTarget;\r\n\r\n    /**\r\n     * Whether the object is draggable. Default is true.\r\n     */\r\n    private _dragEnabled: boolean = false;\r\n    set dragEnabled(enabled: boolean) {\r\n        this._dragEnabled = !!enabled;\r\n        this._elem.draggable = this._dragEnabled;\r\n    }\r\n    get dragEnabled(): boolean {\r\n        return this._dragEnabled;\r\n    }\r\n\r\n    /**\r\n     * Allows drop on this element\r\n     */\r\n    dropEnabled: boolean = false;\r\n    /**\r\n     * Drag effect\r\n     */\r\n    effectAllowed: string;\r\n    /**\r\n     * Drag cursor\r\n     */\r\n    effectCursor: string;\r\n\r\n    /**\r\n     * Restrict places where a draggable element can be dropped. Either one of\r\n     * these two mechanisms can be used:\r\n     *\r\n     * - dropZones: an array of strings that permits to specify the drop zones\r\n     *   associated with this component. By default, if the drop-zones attribute\r\n     *   is not specified, the droppable component accepts drop operations by\r\n     *   all the draggable components that do not specify the allowed-drop-zones\r\n     *\r\n     * - allowDrop: a boolean function for droppable components, that is checked\r\n     *   when an item is dragged. The function is passed the dragData of this\r\n     *   item.\r\n     *   - if it returns true, the item can be dropped in this component\r\n     *   - if it returns false, the item cannot be dropped here\r\n     */\r\n    allowDrop: (dropData: any) => boolean;\r\n    dropZones: string[] = [];\r\n\r\n    /**\r\n     * Here is the property dragImage you can use:\r\n     * - The string value as url to the image\r\n     *   <div class=\"panel panel-default\"\r\n     *        dnd-draggable [dragEnabled]=\"true\"\r\n     *        [dragImage]=\"/images/simpler.png\">\r\n     * ...\r\n     * - The DragImage value with Image and optional offset by x and y:\r\n     *   let myDragImage: DragImage = new DragImage(\"/images/simpler1.png\", 0, 0);\r\n     * ...\r\n     *   <div class=\"panel panel-default\"\r\n     *        dnd-draggable [dragEnabled]=\"true\"\r\n     *        [dragImage]=\"myDragImage\">\r\n     * ...\r\n     * - The custom function to return the value of dragImage programmatically:\r\n     *   <div class=\"panel panel-default\"\r\n     *        dnd-draggable [dragEnabled]=\"true\"\r\n     *        [dragImage]=\"getDragImage(someData)\">\r\n     * ...\r\n     *   getDragImage(value:any): string {\r\n     *     return value ? \"/images/simpler1.png\" : \"/images/simpler2.png\"\r\n     *   }\r\n     */\r\n    dragImage: string | DragImage | Function;\r\n\r\n    cloneItem: boolean = false;\r\n\r\n    constructor(elemRef: ElementRef, public _dragDropService: DragDropService, public _config: DragDropConfig,\r\n        private _cdr: ChangeDetectorRef) {\r\n\r\n        // Assign default cursor unless overridden\r\n        this._defaultCursor = _config.defaultCursor;\r\n        this._elem = elemRef.nativeElement;\r\n        this._elem.style.cursor = this._defaultCursor;  // set default cursor on our element\r\n        //\r\n        // DROP events\r\n        //\r\n        this._elem.ondragenter = (event: Event) => {\r\n            this._onDragEnter(event);\r\n        };\r\n        this._elem.ondragover = (event: DragEvent) => {\r\n            this._onDragOver(event);\r\n            //\r\n            if (event.dataTransfer != null) {\r\n                event.dataTransfer.dropEffect = this._config.dropEffect.name;\r\n            }\r\n\r\n            return false;\r\n        };\r\n        this._elem.ondragleave = (event: Event) => {\r\n            this._onDragLeave(event);\r\n        };\r\n        this._elem.ondrop = (event: Event) => {\r\n            this._onDrop(event);\r\n        };\r\n        //\r\n        // Drag events\r\n        //\r\n        this._elem.onmousedown = (event: MouseEvent) => {\r\n            this._target = event.target;\r\n        };\r\n        this._elem.ondragstart = (event: DragEvent) => {\r\n            if (this._dragHandle) {\r\n                if (!this._dragHandle.contains(<Element>this._target)) {\r\n                    event.preventDefault();\r\n                    return;\r\n                }\r\n            }\r\n\r\n            this._onDragStart(event);\r\n            //\r\n            if (event.dataTransfer != null) {\r\n                event.dataTransfer.setData('text', '');\r\n                // Change drag effect\r\n                event.dataTransfer.effectAllowed = this.effectAllowed || this._config.dragEffect.name;\r\n                // Change drag image\r\n                if (isPresent(this.dragImage)) {\r\n                    if (isString(this.dragImage)) {\r\n                        (<any>event.dataTransfer).setDragImage(createImage(<string>this.dragImage));\r\n                    } else if (isFunction(this.dragImage)) {\r\n                        (<any>event.dataTransfer).setDragImage(callFun(<Function>this.dragImage));\r\n                    } else {\r\n                        let img: DragImage = <DragImage>this.dragImage;\r\n                        (<any>event.dataTransfer).setDragImage(img.imageElement, img.x_offset, img.y_offset);\r\n                    }\r\n                } else if (isPresent(this._config.dragImage)) {\r\n                    let dragImage: DragImage = this._config.dragImage;\r\n                    (<any>event.dataTransfer).setDragImage(dragImage.imageElement, dragImage.x_offset, dragImage.y_offset);\r\n                } else if (this.cloneItem) {\r\n                    this._dragHelper = <HTMLElement>this._elem.cloneNode(true);\r\n                    this._dragHelper.classList.add('dnd-drag-item');\r\n                    this._dragHelper.style.position = \"absolute\";\r\n                    this._dragHelper.style.top = \"0px\";\r\n                    this._dragHelper.style.left = \"-1000px\";\r\n                    this._elem.parentElement.appendChild(this._dragHelper);\r\n                    (<any>event.dataTransfer).setDragImage(this._dragHelper, event.offsetX, event.offsetY);\r\n                }\r\n\r\n                // Change drag cursor\r\n                let cursorelem = (this._dragHandle) ? this._dragHandle : this._elem;\r\n\r\n                if (this._dragEnabled) {\r\n                    cursorelem.style.cursor = this.effectCursor ? this.effectCursor : this._config.dragCursor;\r\n                } else {\r\n                    cursorelem.style.cursor = this._defaultCursor;\r\n                }\r\n            }\r\n        };\r\n\r\n        this._elem.ondragend = (event: Event) => {\r\n            if (this._elem.parentElement && this._dragHelper) {\r\n                this._elem.parentElement.removeChild(this._dragHelper);\r\n            }\r\n            // console.log('ondragend', event.target);\r\n            this._onDragEnd(event);\r\n            // Restore style of dragged element\r\n            let cursorelem = (this._dragHandle) ? this._dragHandle : this._elem;\r\n            cursorelem.style.cursor = this._defaultCursor;\r\n        };\r\n    }\r\n\r\n    public setDragHandle(elem: HTMLElement) {\r\n        this._dragHandle = elem;\r\n    }\r\n    /******* Change detection ******/\r\n\r\n    detectChanges () {\r\n        // Programmatically run change detection to fix issue in Safari\r\n        setTimeout(() => {\r\n            if ( this._cdr && !(this._cdr as ViewRef).destroyed ) {\r\n                this._cdr.detectChanges();\r\n            }\r\n        }, 250);\r\n    }\r\n\r\n    //****** Droppable *******//\r\n    private _onDragEnter(event: Event): void {\r\n        // console.log('ondragenter._isDropAllowed', this._isDropAllowed);\r\n        if (this._isDropAllowed(event)) {\r\n            // event.preventDefault();\r\n            this._onDragEnterCallback(event);\r\n        }\r\n    }\r\n\r\n    private _onDragOver(event: Event) {\r\n        // // console.log('ondragover._isDropAllowed', this._isDropAllowed);\r\n        if (this._isDropAllowed(event)) {\r\n            // The element is over the same source element - do nothing\r\n            if (event.preventDefault) {\r\n                // Necessary. Allows us to drop.\r\n                event.preventDefault();\r\n            }\r\n\r\n            this._onDragOverCallback(event);\r\n        }\r\n    }\r\n\r\n    private _onDragLeave(event: Event): void {\r\n        // console.log('ondragleave._isDropAllowed', this._isDropAllowed);\r\n        if (this._isDropAllowed(event)) {\r\n            // event.preventDefault();\r\n            this._onDragLeaveCallback(event);\r\n        }\r\n    }\r\n\r\n    private _onDrop(event: Event): void {\r\n        // console.log('ondrop._isDropAllowed', this._isDropAllowed);\r\n        if (this._isDropAllowed(event)) {\r\n            // Necessary. Allows us to drop.\r\n            this._preventAndStop(event);\r\n\r\n            this._onDropCallback(event);\r\n\r\n            this.detectChanges();\r\n        }\r\n    }\r\n\r\n    private _isDropAllowed(event: any): boolean {\r\n        if ((this._dragDropService.isDragged || (event.dataTransfer && event.dataTransfer.files)) && this.dropEnabled) {\r\n            // First, if `allowDrop` is set, call it to determine whether the\r\n            // dragged element can be dropped here.\r\n            if (this.allowDrop) {\r\n                return this.allowDrop(this._dragDropService.dragData);\r\n            }\r\n\r\n            // Otherwise, use dropZones if they are set.\r\n            if (this.dropZones.length === 0 && this._dragDropService.allowedDropZones.length === 0) {\r\n                return true;\r\n            }\r\n            for (let i: number = 0; i < this._dragDropService.allowedDropZones.length; i++) {\r\n                let dragZone: string = this._dragDropService.allowedDropZones[i];\r\n                if (this.dropZones.indexOf(dragZone) !== -1) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private _preventAndStop(event: Event): any {\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n        }\r\n        if (event.stopPropagation) {\r\n            event.stopPropagation();\r\n        }\r\n    }\r\n\r\n    //*********** Draggable **********//\r\n\r\n    private _onDragStart(event: Event): void {\r\n        //console.log('ondragstart.dragEnabled', this._dragEnabled);\r\n        if (this._dragEnabled) {\r\n            this._dragDropService.allowedDropZones = this.dropZones;\r\n            // console.log('ondragstart.allowedDropZones', this._dragDropService.allowedDropZones);\r\n            this._onDragStartCallback(event);\r\n        }\r\n    }\r\n\r\n    private _onDragEnd(event: Event): void {\r\n        this._dragDropService.allowedDropZones = [];\r\n        // console.log('ondragend.allowedDropZones', this._dragDropService.allowedDropZones);\r\n        this._onDragEndCallback(event);\r\n    }\r\n\r\n    //**** Drop Callbacks ****//\r\n    _onDragEnterCallback(event: Event) { }\r\n    _onDragOverCallback(event: Event) { }\r\n    _onDragLeaveCallback(event: Event) { }\r\n    _onDropCallback(event: Event) { }\r\n\r\n    //**** Drag Callbacks ****//\r\n    _onDragStartCallback(event: Event) { }\r\n    _onDragEndCallback(event: Event) { }\r\n}\r\n\r\nexport class AbstractHandleComponent {\r\n    _elem: HTMLElement;\r\n    constructor(elemRef: ElementRef, public _dragDropService: DragDropService, public _config: DragDropConfig,\r\n        private _Component: AbstractComponent, private _cdr: ChangeDetectorRef) {\r\n        this._elem = elemRef.nativeElement;\r\n        this._Component.setDragHandle(this._elem);\r\n    }\r\n}\r\n","// Copyright (C) 2016-2018 Sergey Akopkokhyants\r\n// This project is licensed under the terms of the MIT license.\r\n// https://github.com/akserg/ng2-dnd\r\n\r\nimport {ChangeDetectorRef} from '@angular/core';\r\nimport {Directive, Input, Output, EventEmitter, ElementRef} from '@angular/core';\r\n\r\nimport {AbstractComponent, AbstractHandleComponent} from './abstract.component';\r\nimport {DragDropConfig, DragImage} from './dnd.config';\r\nimport {DragDropService, DragDropData} from './dnd.service';\r\n\r\n@Directive({ selector: '[dnd-draggable]' })\r\nexport class DraggableComponent extends AbstractComponent {\r\n\r\n    @Input(\"dragEnabled\") set draggable(value:boolean) {\r\n        this.dragEnabled = !!value;\r\n    }\r\n\r\n    /**\r\n     * Callback function called when the drag actions happened.\r\n     */\r\n    @Output() onDragStart: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\r\n    @Output() onDragEnd: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\r\n\r\n    /**\r\n     * The data that has to be dragged. It can be any JS object\r\n     */\r\n    @Input() dragData: any;\r\n\r\n    /**\r\n     * Callback function called when the drag action ends with a valid drop action.\r\n     * It is activated after the on-drop-success callback\r\n     */\r\n    @Output(\"onDragSuccess\") onDragSuccessCallback: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Input(\"dropZones\") set dropzones(value:Array<string>) {\r\n        this.dropZones = value;\r\n    }\r\n\r\n    /**\r\n     * Drag allowed effect\r\n     */\r\n    @Input(\"effectAllowed\") set effectallowed(value: string) {\r\n        this.effectAllowed = value;\r\n    }\r\n\r\n    /**\r\n     * Drag effect cursor\r\n     */\r\n    @Input(\"effectCursor\") set effectcursor(value: string) {\r\n        this.effectCursor = value;\r\n    }\r\n\r\n    /**\r\n     * Here is the property dragImage you can use:\r\n     * - The string value as url to the image\r\n     *   <div class=\"panel panel-default\"\r\n     *        dnd-draggable [dragEnabled]=\"true\"\r\n     *        [dragImage]=\"/images/simpler.png\">\r\n     * ...\r\n     * - The DragImage value with Image and offset by x and y:\r\n     *   let myDragImage: DragImage = new DragImage(\"/images/simpler1.png\", 0, 0);\r\n     * ...\r\n     *   <div class=\"panel panel-default\"\r\n     *        dnd-draggable [dragEnabled]=\"true\"\r\n     *        [dragImage]=\"myDragImage\">\r\n     * ...\r\n     * - The custom function to return the value of dragImage programmatically:\r\n     *   <div class=\"panel panel-default\"\r\n     *        dnd-draggable [dragEnabled]=\"true\"\r\n     *        [dragImage]=\"getDragImage(someData)\">\r\n     * ...\r\n     *   getDragImage(value:any): string {\r\n     *     return value ? \"/images/simpler1.png\" : \"/images/simpler2.png\"\r\n     *   }\r\n     */\r\n    @Input() dragImage: string | DragImage | Function;\r\n\r\n    \r\n    @Input() cloneItem: boolean;\r\n\r\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config:DragDropConfig,\r\n        cdr:ChangeDetectorRef) {\r\n\r\n        super(elemRef, dragDropService, config, cdr);\r\n        this._defaultCursor = this._elem.style.cursor;\r\n        this.dragEnabled = true;\r\n    }\r\n\r\n    _onDragStartCallback(event: MouseEvent) {\r\n        this._dragDropService.isDragged = true;\r\n        this._dragDropService.dragData = this.dragData;\r\n        this._dragDropService.onDragSuccessCallback = this.onDragSuccessCallback;\r\n        this._elem.classList.add(this._config.onDragStartClass);\r\n        //\r\n        this.onDragStart.emit({dragData: this.dragData, mouseEvent: event});\r\n    }\r\n\r\n    _onDragEndCallback(event: MouseEvent) {\r\n        this._dragDropService.isDragged = false;\r\n        this._dragDropService.dragData = null;\r\n        this._dragDropService.onDragSuccessCallback = null;\r\n        this._elem.classList.remove(this._config.onDragStartClass);\r\n        //\r\n        this.onDragEnd.emit({dragData: this.dragData, mouseEvent: event});\r\n    }\r\n}\r\n\r\n\r\n@Directive({ selector: '[dnd-draggable-handle]' })\r\nexport class DraggableHandleComponent extends AbstractHandleComponent {\r\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config:DragDropConfig, _Component: DraggableComponent,\r\n        cdr:ChangeDetectorRef) {\r\n\r\n        super(elemRef, dragDropService, config, _Component, cdr);\r\n    }\r\n}\r\n","// Copyright (C) 2016-2018 Sergey Akopkokhyants\r\n// This project is licensed under the terms of the MIT license.\r\n// https://github.com/akserg/ng2-dnd\r\n\r\nimport {ChangeDetectorRef} from '@angular/core';\r\nimport {Directive, Input, Output, EventEmitter, ElementRef} from '@angular/core';\r\n\r\nimport {AbstractComponent} from './abstract.component';\r\nimport {DragDropConfig} from './dnd.config';\r\nimport {DragDropService, DragDropData} from './dnd.service';\r\n\r\n@Directive({ selector: '[dnd-droppable]' })\r\nexport class DroppableComponent extends AbstractComponent {\r\n\r\n    @Input(\"dropEnabled\") set droppable(value:boolean) {\r\n        this.dropEnabled = !!value;\r\n    }\r\n\r\n    /**\r\n     * Callback function called when the drop action completes correctly.\r\n     * It is activated before the on-drag-success callback.\r\n     */\r\n    @Output() onDropSuccess: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\r\n    @Output() onDragEnter: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\r\n    @Output() onDragOver: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\r\n    @Output() onDragLeave: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\r\n\r\n    @Input(\"allowDrop\") set allowdrop(value: (dropData: any) => boolean) {\r\n        this.allowDrop = value;\r\n    }\r\n\r\n    @Input(\"dropZones\") set dropzones(value:Array<string>) {\r\n        this.dropZones = value;\r\n    }\r\n\r\n    /**\r\n     * Drag allowed effect\r\n     */\r\n    @Input(\"effectAllowed\") set effectallowed(value: string) {\r\n        this.effectAllowed = value;\r\n    }\r\n\r\n    /**\r\n     * Drag effect cursor\r\n     */\r\n    @Input(\"effectCursor\") set effectcursor(value: string) {\r\n        this.effectCursor = value;\r\n    }\r\n\r\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config:DragDropConfig,\r\n        cdr:ChangeDetectorRef) {\r\n\r\n        super(elemRef, dragDropService, config, cdr);\r\n\r\n        this.dropEnabled = true;\r\n    }\r\n\r\n    _onDragEnterCallback(event: MouseEvent) {\r\n        if (this._dragDropService.isDragged) {\r\n            this._elem.classList.add(this._config.onDragEnterClass);\r\n            this.onDragEnter.emit({dragData: this._dragDropService.dragData, mouseEvent: event});\r\n        }\r\n    }\r\n\r\n    _onDragOverCallback (event: MouseEvent) {\r\n        if (this._dragDropService.isDragged) {\r\n            this._elem.classList.add(this._config.onDragOverClass);\r\n            this.onDragOver.emit({dragData: this._dragDropService.dragData, mouseEvent: event});\r\n        }\r\n    };\r\n\r\n    _onDragLeaveCallback (event: MouseEvent) {\r\n        if (this._dragDropService.isDragged) {\r\n            this._elem.classList.remove(this._config.onDragOverClass);\r\n            this._elem.classList.remove(this._config.onDragEnterClass);\r\n            this.onDragLeave.emit({dragData: this._dragDropService.dragData, mouseEvent: event});\r\n        }\r\n    };\r\n\r\n    _onDropCallback (event: MouseEvent) {\r\n        let dataTransfer = (event as any).dataTransfer;\r\n        if (this._dragDropService.isDragged || (dataTransfer && dataTransfer.files)) {\r\n            this.onDropSuccess.emit({dragData: this._dragDropService.dragData, mouseEvent: event});\r\n            if (this._dragDropService.onDragSuccessCallback) {\r\n                this._dragDropService.onDragSuccessCallback.emit({dragData: this._dragDropService.dragData, mouseEvent: event});\r\n            }\r\n            this._elem.classList.remove(this._config.onDragOverClass);\r\n            this._elem.classList.remove(this._config.onDragEnterClass);\r\n        }\r\n    }\r\n}\r\n","// Copyright (C) 2016-2018 Sergey Akopkokhyants\r\n// This project is licensed under the terms of the MIT license.\r\n// https://github.com/akserg/ng2-dnd\r\n\r\nimport {ChangeDetectorRef} from '@angular/core';\r\nimport {Directive, Input, Output, EventEmitter, ElementRef} from '@angular/core';\r\nimport {FormArray} from '@angular/forms';\r\n\r\nimport {AbstractComponent, AbstractHandleComponent} from './abstract.component';\r\nimport {DragDropConfig} from './dnd.config';\r\nimport {DragDropService, DragDropSortableService} from './dnd.service';\r\n\r\n@Directive({ selector: '[dnd-sortable-container]' })\r\nexport class SortableContainer extends AbstractComponent {\r\n\r\n    @Input(\"dragEnabled\") set draggable(value:boolean) {\r\n        this.dragEnabled = !!value;\r\n    }\r\n\r\n    private _sortableData: Array<any>|FormArray = [];\r\n    private sortableHandler: SortableFormArrayHandler|SortableArrayHandler;\r\n\r\n    @Input() set sortableData(sortableData: Array<any>|FormArray) {\r\n        this._sortableData = sortableData;\r\n        if (sortableData instanceof FormArray) {\r\n            this.sortableHandler = new SortableFormArrayHandler();\r\n        } else {\r\n            this.sortableHandler = new SortableArrayHandler();\r\n        }\r\n        //\r\n        this.dropEnabled = !!this._sortableData;\r\n        // console.log(\"collection is changed, drop enabled: \" + this.dropEnabled);\r\n    }\r\n    get sortableData(): Array<any>|FormArray {\r\n        return this._sortableData;\r\n    }\r\n\r\n    @Input(\"dropZones\") set dropzones(value:Array<string>) {\r\n        this.dropZones = value;\r\n    }\r\n\r\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config:DragDropConfig, cdr:ChangeDetectorRef,\r\n        private _sortableDataService: DragDropSortableService) {\r\n\r\n        super(elemRef, dragDropService, config, cdr);\r\n        this.dragEnabled = false;\r\n    }\r\n\r\n    _onDragEnterCallback(event: Event) {\r\n        if (this._sortableDataService.isDragged) {\r\n            let item:any = this._sortableDataService.sortableContainer.getItemAt(this._sortableDataService.index);\r\n            // Check does element exist in sortableData of this Container\r\n            if (this.indexOf(item) === -1) {\r\n                // Let's add it\r\n                // console.log('Container._onDragEnterCallback. drag node [' + this._sortableDataService.index.toString() + '] over parent node');\r\n                // Remove item from previouse list\r\n                this._sortableDataService.sortableContainer.removeItemAt(this._sortableDataService.index);\r\n                if (this._sortableDataService.sortableContainer._sortableData.length === 0) {\r\n                    this._sortableDataService.sortableContainer.dropEnabled = true;\r\n                }\r\n                // Add item to new list\r\n                this.insertItemAt(item, 0);\r\n                this._sortableDataService.sortableContainer = this;\r\n                this._sortableDataService.index = 0;\r\n            }\r\n            // Refresh changes in properties of container component\r\n            this.detectChanges();\r\n        }\r\n    }\r\n\r\n    getItemAt(index: number): any {\r\n        return this.sortableHandler.getItemAt(this._sortableData, index);\r\n    }\r\n\r\n    indexOf(item: any): number {\r\n        return this.sortableHandler.indexOf(this._sortableData, item);\r\n    }\r\n\r\n    removeItemAt(index: number): void {\r\n        this.sortableHandler.removeItemAt(this._sortableData, index);\r\n    }\r\n\r\n    insertItemAt(item: any, index: number) {\r\n        this.sortableHandler.insertItemAt(this._sortableData, item, index);\r\n    }\r\n}\r\n\r\nclass SortableArrayHandler {\r\n    getItemAt(sortableData: any, index: number): any {\r\n        return sortableData[index];\r\n    }\r\n\r\n    indexOf(sortableData: any, item: any): number {\r\n        return sortableData.indexOf(item);\r\n    }\r\n\r\n    removeItemAt(sortableData: any, index: number) {\r\n        sortableData.splice(index, 1);\r\n    }\r\n\r\n    insertItemAt(sortableData: any, item: any, index: number) {\r\n        sortableData.splice(index, 0, item);\r\n    }\r\n}\r\n\r\nclass SortableFormArrayHandler {\r\n    getItemAt(sortableData: any, index: number): any {\r\n        return sortableData.at(index);\r\n    }\r\n\r\n    indexOf(sortableData: any, item: any): number {\r\n        return sortableData.controls.indexOf(item);\r\n    }\r\n\r\n    removeItemAt(sortableData: any, index: number) {\r\n        sortableData.removeAt(index);\r\n    }\r\n\r\n    insertItemAt(sortableData: any, item: any, index: number) {\r\n        sortableData.insert(index, item);\r\n    }\r\n}\r\n\r\n@Directive({ selector: '[dnd-sortable]' })\r\nexport class SortableComponent extends AbstractComponent {\r\n\r\n    @Input('sortableIndex') index: number;\r\n\r\n    @Input(\"dragEnabled\") set draggable(value:boolean) {\r\n        this.dragEnabled = !!value;\r\n    }\r\n\r\n    @Input(\"dropEnabled\") set droppable(value:boolean) {\r\n        this.dropEnabled = !!value;\r\n    }\r\n\r\n    /**\r\n     * The data that has to be dragged. It can be any JS object\r\n     */\r\n    @Input() dragData: any;\r\n\r\n    /**\r\n     * Drag allowed effect\r\n     */\r\n    @Input(\"effectAllowed\") set effectallowed(value: string) {\r\n        this.effectAllowed = value;\r\n    }\r\n\r\n    /**\r\n     * Drag effect cursor\r\n     */\r\n    @Input(\"effectCursor\") set effectcursor(value: string) {\r\n        this.effectCursor = value;\r\n    }\r\n\r\n    /**\r\n     * Callback function called when the drag action ends with a valid drop action.\r\n     * It is activated after the on-drop-success callback\r\n     */\r\n    @Output(\"onDragSuccess\") onDragSuccessCallback: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output(\"onDragStart\") onDragStartCallback: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output(\"onDragOver\") onDragOverCallback: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output(\"onDragEnd\") onDragEndCallback: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output(\"onDropSuccess\") onDropSuccessCallback: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config:DragDropConfig,\r\n        private _sortableContainer: SortableContainer,\r\n        private _sortableDataService: DragDropSortableService,\r\n        cdr:ChangeDetectorRef) {\r\n        super(elemRef, dragDropService, config, cdr);\r\n        this.dropZones = this._sortableContainer.dropZones;\r\n        this.dragEnabled = true;\r\n        this.dropEnabled = true;\r\n    }\r\n\r\n    _onDragStartCallback(event: Event) {\r\n        // console.log('_onDragStartCallback. dragging elem with index ' + this.index);\r\n        this._sortableDataService.isDragged = true;\r\n        this._sortableDataService.sortableContainer = this._sortableContainer;\r\n        this._sortableDataService.index = this.index;\r\n        this._sortableDataService.markSortable(this._elem);\r\n        // Add dragData\r\n        this._dragDropService.isDragged = true;\r\n        this._dragDropService.dragData = this.dragData;\r\n        this._dragDropService.onDragSuccessCallback = this.onDragSuccessCallback;\r\n        //\r\n        this.onDragStartCallback.emit(this._dragDropService.dragData);\r\n    }\r\n\r\n    _onDragOverCallback(event: Event) {\r\n        if (this._sortableDataService.isDragged && this._elem !== this._sortableDataService.elem) {\r\n            // console.log('_onDragOverCallback. dragging elem with index ' + this.index);\r\n            this._sortableDataService.sortableContainer = this._sortableContainer;\r\n            this._sortableDataService.index = this.index;\r\n            this._sortableDataService.markSortable(this._elem);\r\n            this.onDragOverCallback.emit(this._dragDropService.dragData);\r\n        }\r\n    }\r\n\r\n    _onDragEndCallback(event: Event) {\r\n        // console.log('_onDragEndCallback. end dragging elem with index ' + this.index);\r\n        this._sortableDataService.isDragged = false;\r\n        this._sortableDataService.sortableContainer = null;\r\n        this._sortableDataService.index = null;\r\n        this._sortableDataService.markSortable(null);\r\n        // Add dragGata\r\n        this._dragDropService.isDragged = false;\r\n        this._dragDropService.dragData = null;\r\n        this._dragDropService.onDragSuccessCallback = null;\r\n        //\r\n        this.onDragEndCallback.emit(this._dragDropService.dragData);\r\n    }\r\n\r\n    _onDragEnterCallback(event: Event) {\r\n        if (this._sortableDataService.isDragged) {\r\n            this._sortableDataService.markSortable(this._elem);\r\n            if ((this.index !== this._sortableDataService.index) ||\r\n                (this._sortableDataService.sortableContainer.sortableData !== this._sortableContainer.sortableData)) {\r\n                // console.log('Component._onDragEnterCallback. drag node [' + this.index + '] over node [' + this._sortableDataService.index + ']');\r\n                // Get item\r\n                let item:any = this._sortableDataService.sortableContainer.getItemAt(this._sortableDataService.index);\r\n                // Remove item from previouse list\r\n                this._sortableDataService.sortableContainer.removeItemAt(this._sortableDataService.index);\r\n                if (this._sortableDataService.sortableContainer.sortableData.length === 0) {\r\n                    this._sortableDataService.sortableContainer.dropEnabled = true;\r\n                }\r\n                // Add item to new list\r\n                this._sortableContainer.insertItemAt(item, this.index);\r\n                if (this._sortableContainer.dropEnabled) {\r\n                    this._sortableContainer.dropEnabled = false;\r\n                }\r\n                this._sortableDataService.sortableContainer = this._sortableContainer;\r\n                this._sortableDataService.index = this.index;\r\n                this.detectChanges();\r\n            }\r\n        }\r\n    }\r\n\r\n    _onDropCallback (event: Event) {\r\n        if (this._sortableDataService.isDragged) {\r\n            // console.log('onDropCallback.onDropSuccessCallback.dragData', this._dragDropService.dragData);\r\n            this.onDropSuccessCallback.emit(this._dragDropService.dragData);\r\n            if (this._dragDropService.onDragSuccessCallback) {\r\n                // console.log('onDropCallback.onDragSuccessCallback.dragData', this._dragDropService.dragData);\r\n                this._dragDropService.onDragSuccessCallback.emit(this._dragDropService.dragData);\r\n            }\r\n            // Refresh changes in properties of container component\r\n            this._sortableContainer.detectChanges();\r\n        }\r\n    }\r\n}\r\n\r\n@Directive({ selector: '[dnd-sortable-handle]' })\r\nexport class SortableHandleComponent extends AbstractHandleComponent {\r\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config:DragDropConfig, _Component: SortableComponent,\r\n        cdr:ChangeDetectorRef) {\r\n\r\n        super(elemRef, dragDropService, config, _Component, cdr);\r\n    }\r\n}\r\n","// Copyright (C) 2016-2018 Sergey Akopkokhyants\r\n// This project is licensed under the terms of the MIT license.\r\n// https://github.com/akserg/ng2-dnd\r\n\r\nimport { NgModule, ModuleWithProviders } from \"@angular/core\";\r\n\r\nimport {DragDropConfig} from './dnd.config';\r\nimport {DragDropService, DragDropSortableService, dragDropServiceFactory, dragDropSortableServiceFactory} from './dnd.service';\r\nimport {DraggableComponent, DraggableHandleComponent} from './draggable.component';\r\nimport {DroppableComponent} from './droppable.component';\r\nimport {SortableContainer, SortableComponent, SortableHandleComponent} from './sortable.component';\r\n\r\nexport * from './abstract.component';\r\nexport * from './dnd.config';\r\nexport * from './dnd.service';\r\nexport * from './draggable.component';\r\nexport * from './droppable.component';\r\nexport * from './sortable.component';\r\n\r\nexport let providers = [\r\n    DragDropConfig,\r\n    { provide: DragDropService, useFactory: dragDropServiceFactory },\r\n    { provide: DragDropSortableService, useFactory: dragDropSortableServiceFactory, deps: [DragDropConfig] }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [DraggableComponent, DraggableHandleComponent, DroppableComponent, SortableContainer, SortableComponent, SortableHandleComponent],\r\n  exports : [DraggableComponent, DraggableHandleComponent, DroppableComponent, SortableContainer, SortableComponent, SortableHandleComponent],\r\n\r\n})\r\nexport class DndModule {\r\n  static forRoot(): ModuleWithProviders {\r\n        return {\r\n            ngModule: DndModule,\r\n            providers: providers\r\n        };\r\n    }\r\n}\r\n"],"names":["Injectable","ElementRef","ChangeDetectorRef","tslib_1.__extends","EventEmitter","Directive","Input","Output","FormArray","NgModule"],"mappings":";;;;;;;;;;;;;;;AAOA,sBAAyB,GAAO;QAC5B,OAAO,OAAO,GAAG,KAAK,QAAQ,CAAC;KAClC;;;;;;AAKD,uBAA0B,GAAQ;QAC9B,OAAO,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,IAAI,CAAC;KAC5C;;;;;;AAKD,wBAA2B,GAAQ;QAC/B,OAAO,OAAO,GAAG,KAAK,UAAU,CAAC;KACpC;;;;;;AAKD,yBAA4B,GAAW;;QACnC,IAAI,GAAG,GAAoB,IAAI,gBAAgB,EAAE,CAAC;QAClD,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC;QACd,OAAO,GAAG,CAAC;KACd;;;;;;AAKD,qBAAwB,GAAa;QACjC,OAAO,GAAG,EAAE,CAAC;KAChB;;;;;;;QC1BG,4BAAmB,IAAY;YAAZ,SAAI,GAAJ,IAAI,CAAQ;SAAK;kCALtB,IAAI,kBAAkB,CAAC,MAAM,CAAC;kCAC9B,IAAI,kBAAkB,CAAC,MAAM,CAAC;kCAC9B,IAAI,kBAAkB,CAAC,MAAM,CAAC;kCAC9B,IAAI,kBAAkB,CAAC,MAAM,CAAC;iCAXhD;;QAgBA;QACI,mBACW,cACA,UACA;;;;;;;YAFA,iBAAY,GAAZ,YAAY;YACZ,aAAQ,GAAR,QAAQ;YACR,aAAQ,GAAR,QAAQ;YACX,IAAI,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;;gBAE7B,IAAI,MAAM,qBAAmB,IAAI,CAAC,YAAY,EAAC;gBAC/C,IAAI,CAAC,YAAY,GAAG,IAAI,gBAAgB,EAAE,CAAC;gBAC3C,mBAAmB,IAAI,CAAC,YAAY,GAAE,GAAG,GAAG,MAAM,CAAC;aACtD;SACJ;wBA3BT;QA4BC,CAAA;AAZD,QAcA;;oCACsC,gBAAgB;oCAChB,gBAAgB;mCACjB,eAAe;uCACX,mBAAmB;8BAEhB,kBAAkB,CAAC,IAAI;8BACvB,kBAAkB,CAAC,IAAI;8BACnC,MAAM;iCAEH,SAAS;;6BAxC5C;QAyCC;;;;;;QC/BD;;;2BAVA;QAaC,CAAA;AAHD;;;AAKA;QACI,OAAO,IAAI,eAAe,EAAE,CAAC;KAChC;;;oCAIqC,EAAE;;;oBAFvCA,eAAU;;8BAnBX;;;;;;AA2BA,4CAA+C,MAAsB;QACjE,OAAO,IAAI,uBAAuB,CAAC,MAAM,CAAC,CAAC;KAC9C;;QAaG,iCAAoB,OAAsB;YAAtB,YAAO,GAAP,OAAO,CAAe;SAAI;8BAJnC,yCAAI;;;;gBACX,OAAO,IAAI,CAAC,KAAK,CAAC;;;;;;;;;QAKtB,8CAAY;;;;YAAZ,UAAa,IAAiB;gBAC1B,IAAI,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;oBACvB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;iBACjE;gBACD,IAAI,SAAS,CAAC,IAAI,CAAC,EAAE;oBACjB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;oBAClB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;iBAC9D;aACJ;;oBArBJA,eAAU;;;;;wBAzBH,cAAc;;;sCANtB;;;ICAA;;;;;;;;;;;;;;IAcA;IAEA,IAAI,aAAa,GAAG,UAAS,CAAC,EAAE,CAAC;QAC7B,aAAa,GAAG,MAAM,CAAC,cAAc;aAChC,EAAE,SAAS,EAAE,EAAE,EAAE,YAAY,KAAK,IAAI,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC;YAC5E,UAAU,CAAC,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC;gBAAE,IAAI,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;oBAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAC/E,OAAO,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC;AAEF,uBAA0B,CAAC,EAAE,CAAC;QAC1B,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACpB,gBAAgB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE;QACvC,CAAC,CAAC,SAAS,GAAG,CAAC,KAAK,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;IACzF,CAAC;;;;;;;;;;QCkEG,2BAAY,OAAmB,EAAS,gBAAiC,EAAS,OAAuB,EAC7F;YADZ,iBA4FC;YA5FuC,qBAAgB,GAAhB,gBAAgB,CAAiB;YAAS,YAAO,GAAP,OAAO,CAAgB;YAC7F,SAAI,GAAJ,IAAI;;;;gCApEgB,KAAK;;;;+BAYd,KAAK;6BA0BN,EAAE;6BA2BH,KAAK;;YAMtB,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,aAAa,CAAC;YAC5C,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,aAAa,CAAC;YACnC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC;;;;YAI9C,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,UAAC,KAAY;gBAClC,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;aAC5B,CAAC;YACF,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,UAAC,KAAgB;gBACrC,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;;gBAExB,IAAI,KAAK,CAAC,YAAY,IAAI,IAAI,EAAE;oBAC5B,KAAK,CAAC,YAAY,CAAC,UAAU,GAAG,KAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC;iBAChE;gBAED,OAAO,KAAK,CAAC;aAChB,CAAC;YACF,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,UAAC,KAAY;gBAClC,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;aAC5B,CAAC;YACF,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,UAAC,KAAY;gBAC7B,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACvB,CAAC;;;;YAIF,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,UAAC,KAAiB;gBACvC,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC;aAC/B,CAAC;YACF,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,UAAC,KAAgB;gBACtC,IAAI,KAAI,CAAC,WAAW,EAAE;oBAClB,IAAI,CAAC,KAAI,CAAC,WAAW,CAAC,QAAQ,mBAAU,KAAI,CAAC,OAAO,EAAC,EAAE;wBACnD,KAAK,CAAC,cAAc,EAAE,CAAC;wBACvB,OAAO;qBACV;iBACJ;gBAED,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;;gBAEzB,IAAI,KAAK,CAAC,YAAY,IAAI,IAAI,EAAE;oBAC5B,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;;oBAEvC,KAAK,CAAC,YAAY,CAAC,aAAa,GAAG,KAAI,CAAC,aAAa,IAAI,KAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC;;oBAEtF,IAAI,SAAS,CAAC,KAAI,CAAC,SAAS,CAAC,EAAE;wBAC3B,IAAI,QAAQ,CAAC,KAAI,CAAC,SAAS,CAAC,EAAE;4BAC1B,mBAAM,KAAK,CAAC,YAAY,GAAE,YAAY,CAAC,WAAW,mBAAS,KAAI,CAAC,SAAS,EAAC,CAAC,CAAC;yBAC/E;6BAAM,IAAI,UAAU,CAAC,KAAI,CAAC,SAAS,CAAC,EAAE;4BACnC,mBAAM,KAAK,CAAC,YAAY,GAAE,YAAY,CAAC,OAAO,mBAAW,KAAI,CAAC,SAAS,EAAC,CAAC,CAAC;yBAC7E;6BAAM;;4BACH,IAAI,GAAG,qBAAyB,KAAI,CAAC,SAAS,EAAC;4BAC/C,mBAAM,KAAK,CAAC,YAAY,GAAE,YAAY,CAAC,GAAG,CAAC,YAAY,EAAE,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC;yBACxF;qBACJ;yBAAM,IAAI,SAAS,CAAC,KAAI,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;;wBAC1C,IAAI,SAAS,GAAc,KAAI,CAAC,OAAO,CAAC,SAAS,CAAC;wBAClD,mBAAM,KAAK,CAAC,YAAY,GAAE,YAAY,CAAC,SAAS,CAAC,YAAY,EAAE,SAAS,CAAC,QAAQ,EAAE,SAAS,CAAC,QAAQ,CAAC,CAAC;qBAC1G;yBAAM,IAAI,KAAI,CAAC,SAAS,EAAE;wBACvB,KAAI,CAAC,WAAW,qBAAgB,KAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAA,CAAC;wBAC3D,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;wBAChD,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;wBAC7C,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;wBACnC,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,GAAG,SAAS,CAAC;wBACxC,KAAI,CAAC,KAAK,CAAC,aAAa,CAAC,WAAW,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;wBACvD,mBAAM,KAAK,CAAC,YAAY,GAAE,YAAY,CAAC,KAAI,CAAC,WAAW,EAAE,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;qBAC1F;;oBAGD,IAAI,UAAU,GAAG,CAAC,KAAI,CAAC,WAAW,IAAI,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,KAAK,CAAC;oBAEpE,IAAI,KAAI,CAAC,YAAY,EAAE;wBACnB,UAAU,CAAC,KAAK,CAAC,MAAM,GAAG,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,OAAO,CAAC,UAAU,CAAC;qBAC7F;yBAAM;wBACH,UAAU,CAAC,KAAK,CAAC,MAAM,GAAG,KAAI,CAAC,cAAc,CAAC;qBACjD;iBACJ;aACJ,CAAC;YAEF,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,UAAC,KAAY;gBAChC,IAAI,KAAI,CAAC,KAAK,CAAC,aAAa,IAAI,KAAI,CAAC,WAAW,EAAE;oBAC9C,KAAI,CAAC,KAAK,CAAC,aAAa,CAAC,WAAW,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;iBAC1D;;;gBAED,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;;gBAEvB,IAAI,UAAU,GAAG,CAAC,KAAI,CAAC,WAAW,IAAI,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,KAAK,CAAC;gBACpE,UAAU,CAAC,KAAK,CAAC,MAAM,GAAG,KAAI,CAAC,cAAc,CAAC;aACjD,CAAC;SACL;QA9JD,sBAAI,0CAAW;;;gBAIf;gBACI,OAAO,IAAI,CAAC,YAAY,CAAC;aAC5B;;;;gBAND,UAAgB,OAAgB;gBAC5B,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,OAAO,CAAC;gBAC9B,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC;aAC5C;;;WAAA;;;;;QA6JM,yCAAa;;;;sBAAC,IAAiB;gBAClC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;;;;;;;QAI5B,yCAAa;;;;YAAb;gBAAA,iBAOC;;gBALG,UAAU,CAAC;oBACP,IAAK,KAAI,CAAC,IAAI,IAAI,CAAC,mBAAC,KAAI,CAAC,IAAe,GAAE,SAAS,EAAG;wBAClD,KAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;qBAC7B;iBACJ,EAAE,GAAG,CAAC,CAAC;aACX;;;;;QAGO,wCAAY;;;;sBAAC,KAAY;;gBAE7B,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;;oBAE5B,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;iBACpC;;;;;;QAGG,uCAAW;;;;sBAAC,KAAY;;gBAE5B,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;;oBAE5B,IAAI,KAAK,CAAC,cAAc,EAAE;;wBAEtB,KAAK,CAAC,cAAc,EAAE,CAAC;qBAC1B;oBAED,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;iBACnC;;;;;;QAGG,wCAAY;;;;sBAAC,KAAY;;gBAE7B,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;;oBAE5B,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;iBACpC;;;;;;QAGG,mCAAO;;;;sBAAC,KAAY;;gBAExB,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;;oBAE5B,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;oBAE5B,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;oBAE5B,IAAI,CAAC,aAAa,EAAE,CAAC;iBACxB;;;;;;QAGG,0CAAc;;;;sBAAC,KAAU;gBAC7B,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,KAAK,KAAK,CAAC,YAAY,IAAI,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,WAAW,EAAE;;;oBAG3G,IAAI,IAAI,CAAC,SAAS,EAAE;wBAChB,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;qBACzD;;oBAGD,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE;wBACpF,OAAO,IAAI,CAAC;qBACf;oBACD,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;;wBAC5E,IAAI,QAAQ,GAAW,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;wBACjE,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;4BACzC,OAAO,IAAI,CAAC;yBACf;qBACJ;iBACJ;gBACD,OAAO,KAAK,CAAC;;;;;;QAGT,2CAAe;;;;sBAAC,KAAY;gBAChC,IAAI,KAAK,CAAC,cAAc,EAAE;oBACtB,KAAK,CAAC,cAAc,EAAE,CAAC;iBAC1B;gBACD,IAAI,KAAK,CAAC,eAAe,EAAE;oBACvB,KAAK,CAAC,eAAe,EAAE,CAAC;iBAC3B;;;;;;QAKG,wCAAY;;;;sBAAC,KAAY;;gBAE7B,IAAI,IAAI,CAAC,YAAY,EAAE;oBACnB,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC;;oBAExD,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;iBACpC;;;;;;QAGG,sCAAU;;;;sBAAC,KAAY;gBAC3B,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,GAAG,EAAE,CAAC;;gBAE5C,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;;;;;;;QAInC,gDAAoB;;;;YAApB,UAAqB,KAAY,KAAK;;;;;QACtC,+CAAmB;;;;YAAnB,UAAoB,KAAY,KAAK;;;;;QACrC,gDAAoB;;;;YAApB,UAAqB,KAAY,KAAK;;;;;QACtC,2CAAe;;;;YAAf,UAAgB,KAAY,KAAK;;;;;;QAGjC,gDAAoB;;;;YAApB,UAAqB,KAAY,KAAK;;;;;QACtC,8CAAkB;;;;YAAlB,UAAmB,KAAY,KAAK;;oBAhSvCA,eAAU;;;;;wBANHC,eAAU;wBAGT,eAAe;wBADf,cAAc;wBAHHC,sBAAiB;;;gCAJrC;;QA8SA;QAEI,iCAAY,OAAmB,EAAS,gBAAiC,EAAS,OAAuB,EAC7F,YAAuC,IAAuB;YADlC,qBAAgB,GAAhB,gBAAgB,CAAiB;YAAS,YAAO,GAAP,OAAO,CAAgB;YAC7F,eAAU,GAAV,UAAU;YAA6B,SAAI,GAAJ,IAAI,CAAmB;YACtE,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,aAAa,CAAC;YACnC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC7C;sCApTL;QAqTC;;;;;;;QCzSuCC,sCAAiB;QAqErD,4BAAY,OAAmB,EAAE,eAAgC,EAAE,MAAqB,EACpF,GAAqB;YADzB,YAGI,kBAAM,OAAO,EAAE,eAAe,EAAE,MAAM,EAAE,GAAG,CAAC,SAG/C;;;;gCAlEmD,IAAIC,iBAAY,EAAgB;8BAClC,IAAIA,iBAAY,EAAgB;;;;;0CAWd,IAAIA,iBAAY,EAAO;YAoDvF,KAAI,CAAC,cAAc,GAAG,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC;YAC9C,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;;SAC3B;QAzED,sBAA0B,yCAAS;;;;gBAAnC,UAAoC,KAAa;gBAC7C,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,KAAK,CAAC;aAC9B;;;WAAA;QAmBD,sBAAwB,yCAAS;;;;gBAAjC,UAAkC,KAAmB;gBACjD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aAC1B;;;WAAA;QAKD,sBAA4B,6CAAa;;;;;;;;gBAAzC,UAA0C,KAAa;gBACnD,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;aAC9B;;;WAAA;QAKD,sBAA2B,4CAAY;;;;;;;;gBAAvC,UAAwC,KAAa;gBACjD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;aAC7B;;;WAAA;;;;;QAsCD,iDAAoB;;;;YAApB,UAAqB,KAAiB;gBAClC,IAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,IAAI,CAAC;gBACvC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;gBAC/C,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC;gBACzE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;;gBAExD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,UAAU,EAAE,KAAK,EAAC,CAAC,CAAC;aACvE;;;;;QAED,+CAAkB;;;;YAAlB,UAAmB,KAAiB;gBAChC,IAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,KAAK,CAAC;gBACxC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACtC,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,GAAG,IAAI,CAAC;gBACnD,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;;gBAE3D,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,UAAU,EAAE,KAAK,EAAC,CAAC,CAAC;aACrE;;oBA9FJC,cAAS,SAAC,EAAE,QAAQ,EAAE,iBAAiB,EAAE;;;;;wBANMJ,eAAU;wBAIlD,eAAe;wBADf,cAAc;wBAJdC,sBAAiB;;;;gCAUpBI,UAAK,SAAC,aAAa;kCAOnBC,WAAM;gCACNA,WAAM;+BAKND,UAAK;4CAMLC,WAAM,SAAC,eAAe;gCAEtBD,UAAK,SAAC,WAAW;oCAOjBA,UAAK,SAAC,eAAe;mCAOrBA,UAAK,SAAC,cAAc;gCA2BpBA,UAAK;gCAGLA,UAAK;;iCA/EV;MAYwC,iBAAiB;;QAkGXH,4CAAuB;QACjE,kCAAY,OAAmB,EAAE,eAAgC,EAAE,MAAqB,EAAE,UAA8B,EACpH,GAAqB;mBAErB,kBAAM,OAAO,EAAE,eAAe,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,CAAC;SAC3D;;oBANJE,cAAS,SAAC,EAAE,QAAQ,EAAE,wBAAwB,EAAE;;;;;wBAxGDJ,eAAU;wBAIlD,eAAe;wBADf,cAAc;wBAuGoF,kBAAkB;wBA3GpHC,sBAAiB;;;uCAJzB;MA8G8C,uBAAuB;;;;;;;QClG7BC,sCAAiB;QAqCrD,4BAAY,OAAmB,EAAE,eAAgC,EAAE,MAAqB,EACpF,GAAqB;YADzB,YAGI,kBAAM,OAAO,EAAE,eAAe,EAAE,MAAM,EAAE,GAAG,CAAC,SAG/C;;;;;kCAjCqD,IAAIC,iBAAY,EAAgB;gCAClC,IAAIA,iBAAY,EAAgB;+BACjC,IAAIA,iBAAY,EAAgB;gCAC/B,IAAIA,iBAAY,EAAgB;YA6BhF,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;;SAC3B;QAzCD,sBAA0B,yCAAS;;;;gBAAnC,UAAoC,KAAa;gBAC7C,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,KAAK,CAAC;aAC9B;;;WAAA;QAWD,sBAAwB,yCAAS;;;;gBAAjC,UAAkC,KAAiC;gBAC/D,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aAC1B;;;WAAA;QAED,sBAAwB,yCAAS;;;;gBAAjC,UAAkC,KAAmB;gBACjD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aAC1B;;;WAAA;QAKD,sBAA4B,6CAAa;;;;;;;;gBAAzC,UAA0C,KAAa;gBACnD,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;aAC9B;;;WAAA;QAKD,sBAA2B,4CAAY;;;;;;;;gBAAvC,UAAwC,KAAa;gBACjD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;aAC7B;;;WAAA;;;;;QAUD,iDAAoB;;;;YAApB,UAAqB,KAAiB;gBAClC,IAAI,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE;oBACjC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;oBACxD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,UAAU,EAAE,KAAK,EAAC,CAAC,CAAC;iBACxF;aACJ;;;;;QAED,gDAAmB;;;;YAAnB,UAAqB,KAAiB;gBAClC,IAAI,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE;oBACjC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;oBACvD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,UAAU,EAAE,KAAK,EAAC,CAAC,CAAC;iBACvF;aACJ;;;;;QAED,iDAAoB;;;;YAApB,UAAsB,KAAiB;gBACnC,IAAI,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE;oBACjC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;oBAC1D,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;oBAC3D,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,UAAU,EAAE,KAAK,EAAC,CAAC,CAAC;iBACxF;aACJ;;;;;QAED,4CAAe;;;;YAAf,UAAiB,KAAiB;;gBAC9B,IAAI,YAAY,GAAG,mBAAC,KAAY,GAAE,YAAY,CAAC;gBAC/C,IAAI,IAAI,CAAC,gBAAgB,CAAC,SAAS,KAAK,YAAY,IAAI,YAAY,CAAC,KAAK,CAAC,EAAE;oBACzE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,UAAU,EAAE,KAAK,EAAC,CAAC,CAAC;oBACvF,IAAI,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,EAAE;wBAC7C,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,UAAU,EAAE,KAAK,EAAC,CAAC,CAAC;qBACnH;oBACD,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;oBAC1D,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;iBAC9D;aACJ;;oBA9EJC,cAAS,SAAC,EAAE,QAAQ,EAAE,iBAAiB,EAAE;;;;;wBANMJ,eAAU;wBAIlD,eAAe;wBADf,cAAc;wBAJdC,sBAAiB;;;;gCAUpBI,UAAK,SAAC,aAAa;oCAQnBC,WAAM;kCACNA,WAAM;iCACNA,WAAM;kCACNA,WAAM;gCAEND,UAAK,SAAC,WAAW;gCAIjBA,UAAK,SAAC,WAAW;oCAOjBA,UAAK,SAAC,eAAe;mCAOrBA,UAAK,SAAC,cAAc;;iCA7CzB;MAYwC,iBAAiB;;;;;;;QCClBH,qCAAiB;QA4BpD,2BAAY,OAAmB,EAAE,eAAgC,EAAE,MAAqB,EAAE,GAAqB,EACnG;YADZ,YAGI,kBAAM,OAAO,EAAE,eAAe,EAAE,MAAM,EAAE,GAAG,CAAC,SAE/C;YAJW,0BAAoB,GAApB,oBAAoB;kCAvBc,EAAE;YA0B5C,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;;SAC5B;QA/BD,sBAA0B,wCAAS;;;;gBAAnC,UAAoC,KAAa;gBAC7C,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,KAAK,CAAC;aAC9B;;;WAAA;QAKD,sBAAa,2CAAY;;;gBAWzB;gBACI,OAAO,IAAI,CAAC,aAAa,CAAC;aAC7B;;;;gBAbD,UAA0B,YAAkC;gBACxD,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;gBAClC,IAAI,YAAY,YAAYK,eAAS,EAAE;oBACnC,IAAI,CAAC,eAAe,GAAG,IAAI,wBAAwB,EAAE,CAAC;iBACzD;qBAAM;oBACH,IAAI,CAAC,eAAe,GAAG,IAAI,oBAAoB,EAAE,CAAC;iBACrD;;gBAED,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC;;aAE3C;;;WAAA;QAKD,sBAAwB,wCAAS;;;;gBAAjC,UAAkC,KAAmB;gBACjD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aAC1B;;;WAAA;;;;;QASD,gDAAoB;;;;YAApB,UAAqB,KAAY;gBAC7B,IAAI,IAAI,CAAC,oBAAoB,CAAC,SAAS,EAAE;;oBACrC,IAAI,IAAI,GAAO,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;;oBAEtG,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;;;;wBAI3B,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,YAAY,CAAC,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;wBAC1F,IAAI,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;4BACxE,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,WAAW,GAAG,IAAI,CAAC;yBAClE;;wBAED,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;wBAC3B,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,GAAG,IAAI,CAAC;wBACnD,IAAI,CAAC,oBAAoB,CAAC,KAAK,GAAG,CAAC,CAAC;qBACvC;;oBAED,IAAI,CAAC,aAAa,EAAE,CAAC;iBACxB;aACJ;;;;;QAED,qCAAS;;;;YAAT,UAAU,KAAa;gBACnB,OAAO,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;aACpE;;;;;QAED,mCAAO;;;;YAAP,UAAQ,IAAS;gBACb,OAAO,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;aACjE;;;;;QAED,wCAAY;;;;YAAZ,UAAa,KAAa;gBACtB,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;aAChE;;;;;;QAED,wCAAY;;;;;YAAZ,UAAa,IAAS,EAAE,KAAa;gBACjC,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;aACtE;;oBAxEJH,cAAS,SAAC,EAAE,QAAQ,EAAE,0BAA0B,EAAE;;;;;wBAPHJ,eAAU;wBAKlD,eAAe;wBADf,cAAc;wBALdC,sBAAiB;wBAMA,uBAAuB;;;;gCAK3CI,UAAK,SAAC,aAAa;mCAOnBA,UAAK;gCAeLA,UAAK,SAAC,WAAW;;gCArCtB;MAauC,iBAAiB;IA0ExD,IAAA;;;;;;;;QACI,wCAAS;;;;;YAAT,UAAU,YAAiB,EAAE,KAAa;gBACtC,OAAO,YAAY,CAAC,KAAK,CAAC,CAAC;aAC9B;;;;;;QAED,sCAAO;;;;;YAAP,UAAQ,YAAiB,EAAE,IAAS;gBAChC,OAAO,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aACrC;;;;;;QAED,2CAAY;;;;;YAAZ,UAAa,YAAiB,EAAE,KAAa;gBACzC,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;aACjC;;;;;;;QAED,2CAAY;;;;;;YAAZ,UAAa,YAAiB,EAAE,IAAS,EAAE,KAAa;gBACpD,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;aACvC;mCAtGL;QAuGC,CAAA;IAED,IAAA;;;;;;;;QACI,4CAAS;;;;;YAAT,UAAU,YAAiB,EAAE,KAAa;gBACtC,OAAO,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;aACjC;;;;;;QAED,0CAAO;;;;;YAAP,UAAQ,YAAiB,EAAE,IAAS;gBAChC,OAAO,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC9C;;;;;;QAED,+CAAY;;;;;YAAZ,UAAa,YAAiB,EAAE,KAAa;gBACzC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aAChC;;;;;;;QAED,+CAAY;;;;;;YAAZ,UAAa,YAAiB,EAAE,IAAS,EAAE,KAAa;gBACpD,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;aACpC;uCAxHL;QAyHC,CAAA;;QAGsCH,qCAAiB;QA0CpD,2BAAY,OAAmB,EAAE,eAAgC,EAAE,MAAqB,EAC5E,oBACA,sBACR,GAAqB;YAHzB,YAII,kBAAM,OAAO,EAAE,eAAe,EAAE,MAAM,EAAE,GAAG,CAAC,SAI/C;YAPW,wBAAkB,GAAlB,kBAAkB;YAClB,0BAAoB,GAApB,oBAAoB;;;;;0CAToC,IAAIC,iBAAY,EAAO;wCAE3B,IAAIA,iBAAY,EAAO;uCACzB,IAAIA,iBAAY,EAAO;sCACzB,IAAIA,iBAAY,EAAO;0CACf,IAAIA,iBAAY,EAAO;YAOvF,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC;YACnD,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;;SAC3B;QA9CD,sBAA0B,wCAAS;;;;gBAAnC,UAAoC,KAAa;gBAC7C,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,KAAK,CAAC;aAC9B;;;WAAA;QAED,sBAA0B,wCAAS;;;;gBAAnC,UAAoC,KAAa;gBAC7C,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,KAAK,CAAC;aAC9B;;;WAAA;QAUD,sBAA4B,4CAAa;;;;;;;;gBAAzC,UAA0C,KAAa;gBACnD,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;aAC9B;;;WAAA;QAKD,sBAA2B,2CAAY;;;;;;;;gBAAvC,UAAwC,KAAa;gBACjD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;aAC7B;;;WAAA;;;;;QAuBD,gDAAoB;;;;YAApB,UAAqB,KAAY;;gBAE7B,IAAI,CAAC,oBAAoB,CAAC,SAAS,GAAG,IAAI,CAAC;gBAC3C,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,GAAG,IAAI,CAAC,kBAAkB,CAAC;gBACtE,IAAI,CAAC,oBAAoB,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;gBAC7C,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;gBAEnD,IAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,IAAI,CAAC;gBACvC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;gBAC/C,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC;;gBAEzE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;aACjE;;;;;QAED,+CAAmB;;;;YAAnB,UAAoB,KAAY;gBAC5B,IAAI,IAAI,CAAC,oBAAoB,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE;;oBAEtF,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,GAAG,IAAI,CAAC,kBAAkB,CAAC;oBACtE,IAAI,CAAC,oBAAoB,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;oBAC7C,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBACnD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;iBAChE;aACJ;;;;;QAED,8CAAkB;;;;YAAlB,UAAmB,KAAY;;gBAE3B,IAAI,CAAC,oBAAoB,CAAC,SAAS,GAAG,KAAK,CAAC;gBAC5C,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,GAAG,IAAI,CAAC;gBACnD,IAAI,CAAC,oBAAoB,CAAC,KAAK,GAAG,IAAI,CAAC;gBACvC,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;;gBAE7C,IAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,KAAK,CAAC;gBACxC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACtC,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,GAAG,IAAI,CAAC;;gBAEnD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;aAC/D;;;;;QAED,gDAAoB;;;;YAApB,UAAqB,KAAY;gBAC7B,IAAI,IAAI,CAAC,oBAAoB,CAAC,SAAS,EAAE;oBACrC,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBACnD,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,oBAAoB,CAAC,KAAK;yBAC9C,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,YAAY,KAAK,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,EAAE;;wBAGrG,IAAI,IAAI,GAAO,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;;wBAEtG,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,YAAY,CAAC,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;wBAC1F,IAAI,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;4BACvE,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,WAAW,GAAG,IAAI,CAAC;yBAClE;;wBAED,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;wBACvD,IAAI,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE;4BACrC,IAAI,CAAC,kBAAkB,CAAC,WAAW,GAAG,KAAK,CAAC;yBAC/C;wBACD,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,GAAG,IAAI,CAAC,kBAAkB,CAAC;wBACtE,IAAI,CAAC,oBAAoB,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;wBAC7C,IAAI,CAAC,aAAa,EAAE,CAAC;qBACxB;iBACJ;aACJ;;;;;QAED,2CAAe;;;;YAAf,UAAiB,KAAY;gBACzB,IAAI,IAAI,CAAC,oBAAoB,CAAC,SAAS,EAAE;;oBAErC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;oBAChE,IAAI,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,EAAE;;wBAE7C,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;qBACpF;;oBAED,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC;iBAC3C;aACJ;;oBA/HJC,cAAS,SAAC,EAAE,QAAQ,EAAE,gBAAgB,EAAE;;;;;wBAtHOJ,eAAU;wBAKlD,eAAe;wBADf,cAAc;wBA8Jc,iBAAiB;wBA7J5B,uBAAuB;wBANxCC,sBAAiB;;;;4BA0HpBI,UAAK,SAAC,eAAe;gCAErBA,UAAK,SAAC,aAAa;gCAInBA,UAAK,SAAC,aAAa;+BAOnBA,UAAK;oCAKLA,UAAK,SAAC,eAAe;mCAOrBA,UAAK,SAAC,cAAc;4CAQpBC,WAAM,SAAC,eAAe;0CAEtBA,WAAM,SAAC,aAAa;yCACpBA,WAAM,SAAC,YAAY;wCACnBA,WAAM,SAAC,WAAW;4CAClBA,WAAM,SAAC,eAAe;;gCApK3B;MA4HuC,iBAAiB;;QAkIXJ,2CAAuB;QAChE,iCAAY,OAAmB,EAAE,eAAgC,EAAE,MAAqB,EAAE,UAA6B,EACnH,GAAqB;mBAErB,kBAAM,OAAO,EAAE,eAAe,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,CAAC;SAC3D;;oBANJE,cAAS,SAAC,EAAE,QAAQ,EAAE,uBAAuB,EAAE;;;;;wBAxPAJ,eAAU;wBAKlD,eAAe;wBADf,cAAc;wBAsPoF,iBAAiB;wBA3PnHC,sBAAiB;;;sCAJzB;MA8P6C,uBAAuB;;;;;;;AC3OpE,QAAW,SAAS,GAAG;QACnB,cAAc;QACd,EAAE,OAAO,EAAE,eAAe,EAAE,UAAU,EAAE,sBAAsB,EAAE;QAChE,EAAE,OAAO,EAAE,uBAAuB,EAAE,UAAU,EAAE,8BAA8B,EAAE,IAAI,EAAE,CAAC,cAAc,CAAC,EAAE;KAC3G,CAAC;;;;;;;QAQO,iBAAO;;;YAAd;gBACM,OAAO;oBACH,QAAQ,EAAE,SAAS;oBACnB,SAAS,EAAE,SAAS;iBACvB,CAAC;aACL;;oBAXJO,aAAQ,SAAC;wBACR,YAAY,EAAE,CAAC,kBAAkB,EAAE,wBAAwB,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,uBAAuB,CAAC;wBAC/I,OAAO,EAAG,CAAC,kBAAkB,EAAE,wBAAwB,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,uBAAuB,CAAC;qBAE5I;;wBA7BD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
